[
  [
    "TensorFlow.js",
    "是什么",
    "TensorFlow 的 JavaScript 版本"
  ],
  [
    "TensorFlow.js",
    "特点",
    "支持 GPU 硬件加速"
  ],
  [
    "TensorFlow.js",
    "用途",
    "运行在 Node.js 或浏览器环境中"
  ],
  [
    "TensorFlow.js",
    "用途",
    "完全基于 JavaScript 从头开发、训练和部署模型"
  ],
  [
    "TensorFlow.js",
    "用途",
    "运行已有的 Python 版 TensorFlow 模型"
  ],
  [
    "TensorFlow.js",
    "用途",
    "基于现有的模型进行继续训练"
  ],
  [
    "TensorFlow.js",
    "包含",
    "tf.tidy"
  ],
  [
    "tf.tidy",
    "用途",
    "清除所有创建的中间张量并释放它们的GPU内存"
  ],
  [
    "tf.tidy",
    "特点",
    "不清除内部函数的返回值"
  ],
  [
    "tf.tidy",
    "工作原理",
    "执行一个函数并清除所有创建的中间张量，释放它们的GPU内存"
  ],
  [
    "dispose",
    "用途",
    "释放张量的GPU内存"
  ],
  [
    "dispose",
    "缺点",
    "进行大量的张量操作时使用可能会很麻烦"
  ],
  [
    "Tensorflow.js",
    "包含",
    "Layers API和Core API"
  ],
  [
    "Layers API",
    "包含",
    "sequential模型和functional模型"
  ],
  [
    "sequential模型",
    "特点",
    "将网络的每一层简单的叠在一起"
  ],
  [
    "sequential模型",
    "组成部分",
    "输入层、隐藏层和输出层"
  ],
  [
    "functional模型",
    "特点",
    "可以创建任何非闭环的计算图"
  ],
  [
    "functional模型",
    "组成部分",
    "SymbolicTensor和apply()方法"
  ],
  [
    "Core API",
    "特点",
    "提供更多灵活性和控制"
  ],
  [
    "Core API",
    "用途",
    "不需要序列化或可以创造自己的序列化方法"
  ],
  [
    "TensorFlow.js",
    "用途",
    "使用GPU来加速数学运算"
  ],
  [
    "TensorFlow.js",
    "包含",
    "dispose和tf.tidy两种内存管理方法"
  ],
  [
    "dispose",
    "用途",
    "清除张量或变量并释放其GPU内存"
  ],
  [
    "tf.tidy",
    "用途",
    "防止应用程序中的内存泄漏"
  ],
  [
    "tf.tidy",
    "用途",
    "更谨慎地控制内存何时回收"
  ],
  [
    "TensorFlow.js",
    "特点",
    "提供低级的机器学习构建模块和高级的类似Keras的API"
  ],
  [
    "TensorFlow.js",
    "用途",
    "构建神经网络"
  ],
  [
    "TensorFlow.js",
    "包含",
    "Layers API和Core API"
  ],
  [
    "Layers API",
    "用途",
    "使用层构建模型"
  ],
  [
    "Core API",
    "用途",
    "借助低级运算构建模型"
  ],
  [
    "TensorFlow.js",
    "组成部分",
    "张量(Tensor)"
  ],
  [
    "张量(Tensor)",
    "是什么",
    "TensorFlow.js中的中心数据单元，是一维或多维数组"
  ],
  [
    "张量(Tensor)",
    "特点",
    "具有shape属性定义数组形状"
  ],
  [
    "tf.tensor",
    "用途",
    "创建Tensor实例"
  ],
  [
    "package.json",
    "是什么",
    "项目的清单文件"
  ],
  [
    "package.json",
    "用途",
    "用于工具的配置中心"
  ],
  [
    "package.json",
    "用途",
    "存储已安装软件包的名称和版本"
  ],
  [
    "开发依赖",
    "是什么",
    "仅用于开发的程序包"
  ],
  [
    "开发依赖",
    "示例",
    "测试的软件包、webpack或Babel"
  ],
  [
    "开发依赖",
    "特点",
    "在生产环境中不需要"
  ],
  [
    "模型评估",
    "用途",
    "评估训练有素的模型的性能"
  ],
  [
    "模型预测",
    "用途",
    "对手写数字的图像进行分类"
  ],
  [
    "doPrediction函数",
    "组成部分",
    "IMAGE_WIDTH, IMAGE_HEIGHT, testData, testxs, labels, preds"
  ],
  [
    "showAccuracy函数",
    "用途",
    "显示每个类别的准确度"
  ],
  [
    "showConfusion函数",
    "用途",
    "显示混淆矩阵"
  ],
  [
    "混淆矩阵",
    "是什么",
    "一种特定的矩阵用来呈现算法性能的可视化效果"
  ],
  [
    "混淆矩阵",
    "用途",
    "用于监督学习"
  ],
  [
    "混淆矩阵",
    "特点",
    "每一列代表预测值，每一行代表实际的类别"
  ],
  [
    "TensorFlow.js",
    "用途",
    "提供预训练模型和演示项目"
  ],
  [
    "图像分类",
    "示例",
    "剪刀石头布手势识别"
  ],
  [
    "剪刀石头布手势识别",
    "步骤",
    "数据图像的采集、模型的训练、参数的调整、模型文件生成、网页端部署、网络摄像头检查"
  ],
  [
    "TensorFlow.js",
    "包含",
    "通过脚本标签（script tags）或从 yarn（或者 NPM）安装并使用 Parcel，WebPack 或 Rollup 等工具构建工程"
  ],
  [
    "TensorFlow.js",
    "用途",
    "在浏览器中加载"
  ],
  [
    "TensorFlow.js",
    "组成部分",
    "JavaScript 代码"
  ],
  [
    "HTML",
    "用途",
    "直接引用 TensorFlow.js 发布的 NPM 包中已经打包安装好的 JavaScript 代码"
  ],
  [
    "预测汽车油耗效率",
    "是",
    "简单的线性回归的实验"
  ],
  [
    "预测汽车油耗效率",
    "用途",
    "预测汽车的油耗效率 MPG"
  ],
  [
    "预测汽车油耗效率",
    "组成部分",
    "加载数据并准备进行训练, 定义模型结构, 训练模型并监视其性能, 评估模型"
  ],
  [
    "TensorFlow.js",
    "用途",
    "在浏览器中训练模型"
  ],
  [
    "模型",
    "用途",
    "预测汽车油耗（MPG）"
  ],
  [
    "汽车功率（Horsepower）",
    "是",
    "模型的输入特征"
  ],
  [
    "汽车油耗（MPG）",
    "是",
    "模型的预测目标"
  ],
  [
    "2.0.0",
    "缺点",
    "has unmet peer dependency \"seedrandom@~"
  ],
  [
    "TensorFlow.js",
    "包含",
    "tf.sequential()和tf.model()两种创建模型的方式"
  ],
  [
    "tf.sequential()",
    "特点",
    "线性堆叠layers的模型"
  ],
  [
    "tf.model()",
    "特点",
    "定义的神经元网络层与层之间的关系较为随意"
  ],
  [
    "TensorFlow.js",
    "相似",
    "Keras的模型定义方式"
  ],
  [
    "createModel()",
    "组成部分",
    "tf.sequential()对象、输入层和输出层"
  ],
  [
    "输入层",
    "特点",
    "inputShape为[1]，units为1，useBias为true"
  ],
  [
    "输出层",
    "特点",
    "units为1，useBias为true"
  ],
  [
    "全连接网络",
    "用途",
    "处理简单的数据"
  ],
  [
    "useBias",
    "用途",
    "神经元权重计算中的偏置量"
  ],
  [
    "tfvis.show.modelSummary",
    "用途",
    "将模型显示在浏览器中"
  ],
  [
    "MNIST数据集",
    "输入",
    "形状为[null, 28, 28, 1]的张量"
  ],
  [
    "MNIST数据集",
    "输出",
    "形状为[null, 10]的张量"
  ],
  [
    "卷积图像分类模型",
    "基于",
    "Sequential模型"
  ],
  [
    "Sequential模型",
    "特点",
    "张量连续地从一层传递到下一层"
  ],
  [
    "二维卷积层",
    "用途",
    "学习空间不变的变换"
  ],
  [
    "二维卷积层",
    "组成部分",
    "inputShape, kernelSize, filters, strides, activation, kernelInitializer"
  ],
  [
    "inputShape",
    "定义",
    "流入模型第一层的数据的形状"
  ],
  [
    "kernelSize",
    "定义",
    "应用于输入数据的滑动卷积滤波器窗口的大小"
  ],
  [
    "filters",
    "定义",
    "应用于输入数据的滤波器窗口的数量"
  ],
  [
    "strides",
    "定义",
    "滑动窗口的步长"
  ],
  [
    "activation",
    "定义",
    "卷积完成后应用于数据的激活函数"
  ],
  [
    "kernelInitializer",
    "定义",
    "用于随机初始化模型权重的方法"
  ],
  [
    "最大池化层",
    "用途",
    "缩减卷积结果的大小"
  ],
  [
    "最大池化层",
    "组成部分",
    "poolSize, strides"
  ],
  [
    "poolSize",
    "定义",
    "应用于输入数据的滑动窗口大小"
  ],
  [
    "strides",
    "定义",
    "滑动窗口的步长"
  ],
  [
    "flatten层",
    "用途",
    "将前一层的输出平铺到一个向量中"
  ],
  [
    "dense层",
    "用途",
    "执行最终的分类"
  ],
  [
    "Adam优化器",
    "特点",
    "对随机目标函数执行一阶梯度优化的算法"
  ],
  [
    "Adam优化器",
    "基于",
    "适应性低阶矩估计"
  ],
  [
    "交叉熵损失函数",
    "用途",
    "优化分类任务"
  ],
  [
    "准确度",
    "用途",
    "衡量所有预测中正确预测的百分比"
  ],
  [
    "index.html",
    "组成部分",
    "<!DOCTYPE html> <html> <head> <meta charset=\"utf-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
  ],
  [
    "index.html",
    "用途",
    "用于构建网页的HTML文件"
  ],
  [
    "index.js",
    "用途",
    "用于编写JavaScript代码的文件"
  ],
  [
    "data.js",
    "用途",
    "用于存储数据的JavaScript文件"
  ],
  [
    "tfjs-examples/mnist",
    "包含",
    "data.js文件"
  ],
  [
    "MnistData",
    "用途",
    "从 MNIST 数据集中随机批量提取 MNIST 图像"
  ],
  [
    "MnistData",
    "包含",
    "训练数据和测试数据"
  ],
  [
    "MnistData",
    "组成部分",
    "nextTrainBatch 和 nextTestBatch 方法"
  ],
  [
    "nextTrainBatch",
    "用途",
    "从训练集中返回一批随机图像及其标签"
  ],
  [
    "nextTestBatch",
    "用途",
    "从测试集中返回一批图像及其标签"
  ],
  [
    "训练数据",
    "用途",
    "训练模型"
  ],
  [
    "测试数据",
    "用途",
    "检查模型对新数据的泛化情况"
  ],
  [
    "MNIST 分类器",
    "特点",
    "预测不受图像顺序的影响"
  ],
  [
    "Web Server for Chrome",
    "用途",
    "解决跨域问题"
  ],
  [
    "model.fit()",
    "用途",
    "用于训练模型"
  ],
  [
    "model.predict()",
    "用途",
    "用于预测"
  ],
  [
    "TensorFLow-vis",
    "用途",
    "可视化模型训练的过程和结果"
  ],
  [
    "回调函数",
    "用途",
    "动态显示训练的过程"
  ],
  [
    "tf.train.adam()",
    "用途",
    "作为模型优化算法"
  ],
  [
    "tf.losses.meanSquaredError",
    "用途",
    "作为判断训练结果的参数"
  ],
  [
    "batchSize",
    "特点",
    "设置为32，表示一次采样32条训练数据"
  ],
  [
    "epochs",
    "特点",
    "设置为50，表示遍历所有样本50次"
  ],
  [
    "shuffle",
    "特点",
    "设置为true，表示打乱数据集"
  ],
  [
    "callback",
    "特点",
    "在每一个训练周期显示训练情况"
  ],
  [
    "tf.linspace()",
    "用途",
    "创建0~1之间平均分配的100个值"
  ],
  [
    "predict()",
    "用途",
    "预测"
  ],
  [
    "tfvis.render.scatterplot",
    "用途",
    "可视化模型预测结果和原始数据"
  ],
  [
    "Tensorflow.js",
    "用途",
    "构建和运行机器学习模型"
  ],
  [
    "mnist项目",
    "包含",
    "HTML文件、JS文件和配置文件"
  ],
  [
    "index.html",
    "组成部分",
    "页面的基本结构，包含div标签、UI元素和JavaScript代码"
  ],
  [
    "index.js",
    "用途",
    "加载数据，定义模型，训练循环并指定UI元素"
  ],
  [
    "data.js",
    "用途",
    "下载和访问mnist数据集"
  ],
  [
    "ui.js",
    "用途",
    "更新可视化元素"
  ],
  [
    "package.json",
    "用途",
    "描述构建和运行示例所需的依赖项"
  ],
  [
    "yarn",
    "用途",
    "构建和运行mnist代码"
  ],
  [
    "Webpack",
    "用途",
    "构建工具用于编写更大的程序"
  ],
  [
    "Parcel",
    "用途",
    "构建工具用于编写更大的程序"
  ],
  [
    "index.html",
    "包含",
    "<html> <body> <h4>TFJS example<hr/></h4> <div id=\"micro-out-div\">TensorFlow.js Test</div> <script src=\"./index.js\"> </script> </body> </html>"
  ],
  [
    "index.html",
    "用途",
    "通过 script 标签引入 index.js"
  ],
  [
    "index.js",
    "用途",
    "写一段简单的测试代码"
  ],
  [
    "index.js",
    "包含",
    "import * as tf from '@tensorflow/tfjs' console.log(tf.version.tfjs) const shape = [2, 3]; // 2 rows, 3 columns const a = tf.tensor"
  ],
  [
    "index.js",
    "组成部分",
    "TensorFlow.js 库的导入和版本打印"
  ],
  [
    "index.js",
    "组成部分",
    "创建形状为[2,3]的张量"
  ],
  [
    "TensorFlow.js",
    "是",
    "JavaScript 语言版本的扩展"
  ],
  [
    "TensorFlow.js",
    "用途",
    "在浏览器环境中实现深度学习的功能"
  ],
  [
    "DeepLearning.js",
    "是",
    "基于 WebGL 加速的开放源代码 JavaScript 机器学习库"
  ],
  [
    "DeepLearning.js",
    "特点",
    "可以直接在浏览器中运行，无需安装或借助后端"
  ],
  [
    "DeepLearning.js",
    "优点",
    "通过 WebGL 在 GPU 上执行计算大幅提高速度"
  ],
  [
    "DeepLearning.js",
    "优点",
    "能够执行完整全面的反向传播"
  ],
  [
    "TensorFlow.js",
    "包含",
    "底层 Core API 和最高级的 Layers API"
  ],
  [
    "TensorFlow.js",
    "用途",
    "在浏览器上开发模型或运行已训练的模型"
  ],
  [
    "TensorFlow.js",
    "优点",
    "支持 GPU 硬件加速"
  ],
  [
    "TensorFlow.js",
    "优点",
    "开箱即用的开发库，无需编写基础复杂的数学问题"
  ],
  [
    "TensorFlow.js",
    "优点",
    "减少服务器运算，提高服务器资源利用和客户端响应速度"
  ],
  [
    "TensorFlow.js",
    "优点",
    "使用 JavaScript，降低前端工程师入门门槛"
  ],
  [
    "TensorFlow.js",
    "优点",
    "使用 GPU 加速模型运算，提高运算效率"
  ],
  [
    "TensorFlow.js",
    "优点",
    "在 Node 环境运算速度与 Python 不相上下"
  ],
  [
    "TensorFlow.js",
    "优点",
    "模型可以与 Python 等其他语言模型互转"
  ],
  [
    "TensorFlow.js",
    "优点",
    "浏览器可以很好可视化机器训练过程"
  ],
  [
    "TensorFlow.js",
    "优点",
    "浏览器可调用设备的摄像头、麦克风等增加应用场景"
  ],
  [
    "@tensorflow/tfjs",
    "是",
    "TensorFlow.js 模块"
  ],
  [
    "@tensorflow/tfjs-vis",
    "是",
    "TensorFlow.js 进行浏览器可视化的一组实用工具库"
  ],
  [
    "index.html",
    "包含",
    "加载 @tensorflow/tfjs 和 @tensorflow/tfjs-vis 两个 TFJS 模块的代码"
  ],
  [
    "cdn.jsdelivr.net",
    "用途",
    "将 NPM 模块转换为在线可以引用的免费服务"
  ],
  [
    "HTML 文件",
    "组成部分",
    "头信息"
  ],
  [
    "头信息",
    "包含",
    "加载 @tensorflow/tfjs 和 @tensorflow/tfjs-vis 两个 TFJS 模块的脚本"
  ],
  [
    "CNN",
    "用途",
    "识别手写数字"
  ],
  [
    "Tensorflow.js",
    "用途",
    "构建CNN模型"
  ],
  [
    "手写数字识别",
    "步骤",
    "训练分类器"
  ],
  [
    "手写数字识别",
    "步骤",
    "评估分类器的准确性"
  ],
  [
    "分类器",
    "用途",
    "查看图像及其标签"
  ],
  [
    "分类器",
    "用途",
    "评估准确性"
  ],
  [
    "数据预处理",
    "包含",
    "数据规范化和转换为张量类型"
  ],
  [
    "JavaScript",
    "缺点",
    "在大规模数据处理上不如Python高效"
  ],
  [
    "JavaScript",
    "缺点",
    "内存回收问题突出"
  ],
  [
    "TensorFlow.js",
    "用途",
    "解决JavaScript内存回收问题"
  ],
  [
    "tf.tidy()",
    "用途",
    "进行内存清理工作，防止内存泄露"
  ],
  [
    "tf.tidy()",
    "特点",
    "将大规模内存操作放置在其回调中执行"
  ],
  [
    "convertToTensor函数",
    "执行步骤",
    "打乱数据顺序，创建特征向量和标签向量，转换为张量格式，进行归一化操作"
  ],
  [
    "convertToTensor函数",
    "用途",
    "将原始数据转变为TensorFlow可读的张量格式"
  ],
  [
    "归一化操作",
    "用途",
    "让输入输出映射到0-1之间，保证后期更有效地训练"
  ],
  [
    "tf.util.shuffle",
    "用途",
    "打乱数据集中数据顺序"
  ],
  [
    "训练模型",
    "步骤",
    "定义模型的拓扑结构"
  ],
  [
    "训练模型",
    "步骤",
    "训练并评估训练的结果"
  ],
  [
    "index.js",
    "包含",
    "train函数"
  ],
  [
    "train函数",
    "用途",
    "训练模型"
  ],
  [
    "metrics",
    "包含",
    "loss, val_loss, acc, val_acc"
  ],
  [
    "loss",
    "用途",
    "表示训练集的损失值"
  ],
  [
    "val_loss",
    "用途",
    "表示验证集的损失值"
  ],
  [
    "acc",
    "用途",
    "表示训练集的准确度"
  ],
  [
    "val_acc",
    "用途",
    "表示验证集的准确度"
  ],
  [
    "验证集",
    "用途",
    "了解模型效率、调试超参数"
  ],
  [
    "trainXs",
    "用途",
    "训练集，用于训练模型"
  ],
  [
    "testXs",
    "用途",
    "验证集，在每个时期结束时对模型进行测试"
  ],
  [
    "数据集",
    "特点",
    "需要调整为模型期望的形状"
  ],
  [
    "模型期望的形状",
    "是",
    "[num_examples, image_width, image_height, channels]"
  ],
  [
    "数据集",
    "组成部分",
    "输入（Xs）和标签（Ys）"
  ],
  [
    "model.fit",
    "参数",
    "BATCH_SIZE设置为512"
  ],
  [
    "BATCH_SIZE",
    "用途",
    "每次批量处理512个图像"
  ],
  [
    "MNIST数据集",
    "特点",
    "单个图像的维度为[28,28,1]"
  ],
  [
    "较大的批次",
    "优点",
    "对模型的权重产生了更一致且变化较小的渐变更新"
  ],
  [
    "较大的批次",
    "缺点",
    "训练期间需要更多的内存"
  ],
  [
    "较大的批次",
    "条件",
    "需要相应地增加epochs"
  ],
  [
    "model.fit",
    "参数",
    "validationData设置为[testXs, testYs]"
  ],
  [
    "validationData",
    "用途",
    "在训练期间验证损失和准确性"
  ],
  [
    "model.fit",
    "特点",
    "是异步函数"
  ],
  [
    "run函数",
    "步骤",
    "调用getModel获取模型"
  ],
  [
    "run函数",
    "步骤",
    "显示模型架构"
  ],
  [
    "run函数",
    "步骤",
    "调用train函数训练模型"
  ],
  [
    "MNIST模型训练",
    "特点",
    "执行10个周期"
  ],
  [
    "MNIST模型训练",
    "特点",
    "每个周期由大约110批次组成"
  ]
]